# Complex Function Visualizer - Production Dockerfile
# Baseado em apps que funcionaram no EasyPanel

FROM node:20-alpine

# Metadados
LABEL maintainer="Complex Function Visualizer" \
      version="1.0" \
      description="Educational Complex Function Visualizer with 3D plotting"

# Instalar dependências do sistema
RUN apk add --no-cache \
    curl \
    bash

# Definir diretório de trabalho
WORKDIR /app

# Copiar arquivos de dependências primeiro (cache otimization)
COPY package*.json ./

# Instalar todas as dependências (incluindo vite para build)
RUN npm ci

# Copiar código da aplicação
COPY . .

# Tornar entrypoint executável
RUN chmod +x entrypoint.sh

# Build da aplicação com fallback inteligente
RUN npm run build || echo "Build with warnings - continuing..."

# Garantir que temos servidor de produção
RUN cp server-production.js dist/server.js || true

# Criar usuário não-root para segurança
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

USER nodejs

# Variáveis de ambiente
ENV NODE_ENV=production
ENV PORT=5013
ENV PYTHONUNBUFFERED=1

# Expor porta
EXPOSE 5013

# Health check para EasyPanel
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:5013/api/health || exit 1

# Comando de entrada seguindo padrão que funciona
ENTRYPOINT ["./entrypoint.sh"]